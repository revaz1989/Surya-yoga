version: '3.8'

services:
  suryayoga:
    build:
      context: ../..
      dockerfile: deployment/docker/Dockerfile
    container_name: suryayoga-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_BASE_URL=https://suryayoga.ge
    env_file:
      - ../../.env.production
    volumes:
      - uploads:/app/uploads
      - database:/app/data
    networks:
      - suryayoga-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  nginx:
    image: nginx:alpine
    container_name: suryayoga-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - uploads:/var/lib/suryayoga/uploads:ro
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - /etc/ssl/private:/etc/ssl/private:ro
    depends_on:
      - suryayoga
    networks:
      - suryayoga-network

volumes:
  uploads:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/suryayoga/uploads
  database:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/lib/suryayoga/database

networks:
  suryayoga-network:
    driver: bridge